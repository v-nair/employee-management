version: '3.8'

services:
  laravel:
    build:
      context: ./src
      dockerfile: Dockerfile
    image: php:8.1-fpm
    container_name: ${LARAVEL_CONTAINER}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    ports:
      - 8000:8000
    networks:
      - empmgmt-network
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "php", "-m"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_CONTAINER}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - empmgmt-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - 6379:6379
    networks:
      - empmgmt-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env

  nodejs:
    build:
      context: ./src
      dockerfile: Dockerfile-nodejs
    container_name: ${NODE_CONTAINER}
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    ports:
      - "3000:3000"  # Forwarding port 3000 to host machine
    networks:
      - empmgmt-network
    depends_on:
      - laravel
    command: ["sh", "-c", "npm install && npm run dev -- --host 0.0.0.0"]  # This runs npm install and keeps dev server running
    healthcheck:
      test: ["CMD", "node", "-v"]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  empmgmt-network:
    driver: bridge